{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      filters: {\n        section: \"\",\n        line: \"\",\n        date: \"\",\n        kmFrom: null,\n        kmTo: null\n      },\n      allData: [],\n      uniqueSections: [],\n      uniqueLines: [],\n      uniqueDates: []\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:8000/dair/get-predictions\", {\n          auth: {\n            username: \"DAIR_ML\",\n            password: \"TDMDATAPREP\"\n          }\n        });\n        this.allData = response.data;\n        this.uniqueSections = [...new Set(this.allData.map(item => item.TMS_SECTION))];\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    updateLines() {\n      const filtered = this.allData.filter(item => item.TMS_SECTION === this.filters.section);\n      this.uniqueLines = [...new Set(filtered.map(item => item.LINE))];\n    },\n    updateDates() {\n      const filtered = this.allData.filter(item => item.TMS_SECTION === this.filters.section && item.LINE === this.filters.line);\n      this.uniqueDates = [...new Set(filtered.map(item => item.RUNDATE))];\n    },\n    applyFilters() {\n      const filtered = this.allData.filter(item => {\n        return (!this.filters.section || item.TMS_SECTION === this.filters.section) && (!this.filters.line || item.LINE === this.filters.line) && (!this.filters.date || item.RUNDATE === this.filters.date) && (!this.filters.kmFrom || item.KM >= this.filters.kmFrom) && (!this.filters.kmTo || item.KM <= this.filters.kmTo);\n      });\n      this.$emit(\"applyFilters\", filtered);\n    },\n    resetFilters() {\n      this.filters = {\n        section: \"\",\n        line: \"\",\n        date: \"\",\n        kmFrom: null,\n        kmTo: null\n      };\n      this.$emit(\"resetFilters\");\n    }\n  }\n};","map":{"version":3,"names":["axios","data","filters","section","line","date","kmFrom","kmTo","allData","uniqueSections","uniqueLines","uniqueDates","mounted","fetchData","methods","response","get","auth","username","password","Set","map","item","TMS_SECTION","error","console","updateLines","filtered","filter","LINE","updateDates","RUNDATE","applyFilters","KM","$emit","resetFilters"],"sources":["C:\\Users\\hp\\Desktop\\vue-sample-ui\\src\\components\\FilterForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-container\">\r\n      <div class=\"input-container\">\r\n        <div class=\"input-group\">\r\n          <label for=\"tmsSection\">Section:</label>\r\n          <select id=\"tmsSection\" v-model=\"filters.section\" @change=\"updateLines\">\r\n            <option value=\"\">-Select One-</option>\r\n            <option v-for=\"section in uniqueSections\" :key=\"section\" :value=\"section\">\r\n              {{ section }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"line\">Line:</label>\r\n          <select id=\"line\" v-model=\"filters.line\" :disabled=\"!filters.section\" @change=\"updateDates\">\r\n            <option value=\"\">-ALL-</option>\r\n            <option v-for=\"line in uniqueLines\" :key=\"line\" :value=\"line\">\r\n              {{ line }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"rundate\">Date:</label>\r\n          <select id=\"rundate\" v-model=\"filters.date\" :disabled=\"!filters.line\">\r\n            <option value=\"\">-ALL-</option>\r\n            <option v-for=\"date in uniqueDates\" :key=\"date\" :value=\"date\">\r\n              {{ date }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"kmFrom\">Km From:</label>\r\n          <input type=\"number\" id=\"kmFrom\" v-model.number=\"filters.kmFrom\" :disabled=\"!filters.line\" />\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"kmTo\">Km To:</label>\r\n          <input type=\"number\" id=\"kmTo\" v-model.number=\"filters.kmTo\" :disabled=\"!filters.line\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"button-container\">\r\n        <button class=\"generate-btn\" @click=\"applyFilters\">Generate Prediction</button>\r\n        <button class=\"reset-btn\" @click=\"resetFilters\">Reset Filter</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        filters: {\r\n          section: \"\",\r\n          line: \"\",\r\n          date: \"\",\r\n          kmFrom: null,\r\n          kmTo: null,\r\n        },\r\n        allData: [],\r\n        uniqueSections: [],\r\n        uniqueLines: [],\r\n        uniqueDates: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    },\r\n    methods: {\r\n      async fetchData() {\r\n        try {\r\n          const response = await axios.get(\"http://localhost:8000/dair/get-predictions\", {\r\n            auth: { username: \"DAIR_ML\", password: \"TDMDATAPREP\" },\r\n          });\r\n          this.allData = response.data;\r\n          this.uniqueSections = [...new Set(this.allData.map((item) => item.TMS_SECTION))];\r\n        } catch (error) {\r\n          console.error(\"Error fetching data:\", error);\r\n        }\r\n      },\r\n      updateLines() {\r\n        const filtered = this.allData.filter(\r\n          (item) => item.TMS_SECTION === this.filters.section\r\n        );\r\n        this.uniqueLines = [...new Set(filtered.map((item) => item.LINE))];\r\n      },\r\n      updateDates() {\r\n        const filtered = this.allData.filter(\r\n          (item) =>\r\n            item.TMS_SECTION === this.filters.section && item.LINE === this.filters.line\r\n        );\r\n        this.uniqueDates = [...new Set(filtered.map((item) => item.RUNDATE))];\r\n      },\r\n      applyFilters() {\r\n        const filtered = this.allData.filter((item) => {\r\n          return (\r\n            (!this.filters.section || item.TMS_SECTION === this.filters.section) &&\r\n            (!this.filters.line || item.LINE === this.filters.line) &&\r\n            (!this.filters.date || item.RUNDATE === this.filters.date) &&\r\n            (!this.filters.kmFrom || item.KM >= this.filters.kmFrom) &&\r\n            (!this.filters.kmTo || item.KM <= this.filters.kmTo)\r\n          );\r\n        });\r\n        this.$emit(\"applyFilters\", filtered);\r\n      },\r\n      resetFilters() {\r\n        this.filters = { section: \"\", line: \"\", date: \"\", kmFrom: null, kmTo: null };\r\n        this.$emit(\"resetFilters\");\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}