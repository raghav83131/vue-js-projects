{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  __name: 'FilterForm',\n  emits: ['applyFilters', 'resetFilters'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const emit = __emit;\n    const filters = reactive({\n      section: '',\n      line: '',\n      date: '',\n      kmFrom: null,\n      kmTo: null\n    });\n    const allData = ref([]);\n    const uniqueSections = ref([]);\n    const uniqueLines = ref([]);\n    const uniqueDates = ref([]);\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/dair/get-predictions', {\n          auth: {\n            username: 'DAIR_ML',\n            password: 'TDMDATAPREP'\n          }\n        });\n        allData.value = response.data;\n        uniqueSections.value = [...new Set(allData.value.map(item => item.TMS_SECTION))];\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const updateLines = () => {\n      const filtered = allData.value.filter(item => item.TMS_SECTION === filters.section);\n      uniqueLines.value = [...new Set(filtered.map(item => item.LINE))];\n    };\n    const updateDates = () => {\n      const filtered = allData.value.filter(item => item.TMS_SECTION === filters.section && item.LINE === filters.line);\n      uniqueDates.value = [...new Set(filtered.map(item => item.RUNDATE))];\n    };\n    const applyFilters = () => {\n      const filtered = allData.value.filter(item => (!filters.section || item.TMS_SECTION === filters.section) && (!filters.line || item.LINE === filters.line) && (!filters.date || item.RUNDATE === filters.date) && (!filters.kmFrom || item.KM >= filters.kmFrom) && (!filters.kmTo || item.KM <= filters.kmTo));\n      emit('applyFilters', filtered);\n    };\n    const resetFilters = () => {\n      Object.assign(filters, {\n        section: '',\n        line: '',\n        date: '',\n        kmFrom: null,\n        kmTo: null\n      });\n      emit('resetFilters');\n    };\n    onMounted(fetchData);\n    const __returned__ = {\n      emit,\n      filters,\n      allData,\n      uniqueSections,\n      uniqueLines,\n      uniqueDates,\n      fetchData,\n      updateLines,\n      updateDates,\n      applyFilters,\n      resetFilters,\n      ref,\n      reactive,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","axios","emit","__emit","filters","section","line","date","kmFrom","kmTo","allData","uniqueSections","uniqueLines","uniqueDates","fetchData","response","get","auth","username","password","value","data","Set","map","item","TMS_SECTION","error","console","updateLines","filtered","filter","LINE","updateDates","RUNDATE","applyFilters","KM","resetFilters","Object","assign"],"sources":["C:/Users/hp/Desktop/G/web development/web-dev-projects/track-ui-vue/src/components/FilterForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-container\">\r\n      <div class=\"input-container\">\r\n        <div class=\"input-group\">\r\n          <label for=\"tmsSection\">Section:</label>\r\n          <select id=\"tmsSection\" v-model=\"filters.section\" @change=\"updateLines\">\r\n            <option value=\"\">-Select One-</option>\r\n            <option v-for=\"section in uniqueSections\" :key=\"section\" :value=\"section\">\r\n              {{ section }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"line\">Line:</label>\r\n          <select id=\"line\" v-model=\"filters.line\" :disabled=\"!filters.section\" @change=\"updateDates\">\r\n            <option value=\"\">-ALL-</option>\r\n            <option v-for=\"line in uniqueLines\" :key=\"line\" :value=\"line\">\r\n              {{ line }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"rundate\">Date:</label>\r\n          <select id=\"rundate\" v-model=\"filters.date\" :disabled=\"!filters.line\">\r\n            <option value=\"\">-ALL-</option>\r\n            <option v-for=\"date in uniqueDates\" :key=\"date\" :value=\"date\">\r\n              {{ date }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"kmFrom\">Km From:</label>\r\n          <input type=\"number\" id=\"kmFrom\" v-model.number=\"filters.kmFrom\" :disabled=\"!filters.line\" />\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"kmTo\">Km To:</label>\r\n          <input type=\"number\" id=\"kmTo\" v-model.number=\"filters.kmTo\" :disabled=\"!filters.line\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"button-container\">\r\n        <button class=\"generate-btn\" @click=\"applyFilters\">Generate Prediction</button>\r\n        <button class=\"reset-btn\" @click=\"resetFilters\">Reset Filter</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n\r\n\r\n  <script setup>\r\n  import { ref, reactive, onMounted, defineEmits} from 'vue'\r\n  import axios from 'axios'\r\n  \r\n  const emit = defineEmits(['applyFilters', 'resetFilters'])\r\n  \r\n  const filters = reactive({\r\n    section: '',\r\n    line: '',\r\n    date: '',\r\n    kmFrom: null,\r\n    kmTo: null\r\n  })\r\n  \r\n  const allData = ref([])\r\n  const uniqueSections = ref([])\r\n  const uniqueLines = ref([])\r\n  const uniqueDates = ref([])\r\n  \r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/dair/get-predictions', {\r\n        auth: { username: 'DAIR_ML', password: 'TDMDATAPREP' }\r\n      })\r\n      allData.value = response.data\r\n      uniqueSections.value = [...new Set(allData.value.map(item => item.TMS_SECTION))]\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n  \r\n  const updateLines = () => {\r\n    const filtered = allData.value.filter(item => item.TMS_SECTION === filters.section)\r\n    uniqueLines.value = [...new Set(filtered.map(item => item.LINE))]\r\n  }\r\n  \r\n  const updateDates = () => {\r\n    const filtered = allData.value.filter(item => \r\n      item.TMS_SECTION === filters.section && item.LINE === filters.line\r\n    )\r\n    uniqueDates.value = [...new Set(filtered.map(item => item.RUNDATE))]\r\n  }\r\n  \r\n  const applyFilters = () => {\r\n    const filtered = allData.value.filter(item => (\r\n      (!filters.section || item.TMS_SECTION === filters.section) &&\r\n      (!filters.line || item.LINE === filters.line) &&\r\n      (!filters.date || item.RUNDATE === filters.date) &&\r\n      (!filters.kmFrom || item.KM >= filters.kmFrom) &&\r\n      (!filters.kmTo || item.KM <= filters.kmTo)\r\n    ))\r\n    emit('applyFilters', filtered)\r\n  }\r\n  \r\n  const resetFilters = () => {\r\n    Object.assign(filters, {\r\n      section: '',\r\n      line: '',\r\n      date: '',\r\n      kmFrom: null,\r\n      kmTo: null\r\n    })\r\n    emit('resetFilters')\r\n  }\r\n  \r\n  onMounted(fetchData)\r\n  </script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}